result
mean_hypothesis_onesample=function(data, mu0, sigma, alpha,HA=c('two.side', 'greater', 'smaller')){
x=mean(data)
n=length(data)
s=sd(data)
# tính thống kê kiểm định
if(n >= 30){
if(sigma >= 0){                   # trường hợp 1: biết sigma
z0 = (x-mu0)/(sigma/sqrt(n))
}
else{                            # trường hợp 2: không biết sigma và mẫu lớn (n>=30)
z0 = (x-mu0)/(s/sqrt(n))
}
# tính p-value
if(HA == 'two.side'){
fiz0 = pnorm(abs(z0),0,1)
p.value = 2*(1-fiz0)
}else if(HA == 'greater'){
fiz0 = pnorm(z0,0,1)
p.value = 1 - fiz0
}else if(HA == 'smaller'){
fiz0 = pnorm(z0,0,1)
p.value = fiz0
}
}
else{                             # trường hợp 3: không biết sigma và mẫu nhỏ (n<30)
t0 = (x-mu0)/(s/sqrt(n))
# tính p-value
if(HA == 'two.side'){
p.value = 2*pt(abs(t0),n-1,lower.tail = FALSE)
}else if(HA == 'greater'){
p.value = pt(t0,n-1,lower.tail = FALSE)
}else if(HA == 'smaller'){
p.value = pt(t0,n-1)
}
}
# kết luận
if(p.value < alpha){
print ('Bac bo')
}
else{
print('Chua du co so bac bo')
}
print(x)
print(p.value)
}
result=mean_hypothesis_onesample(profit, 65, -1, 0.05,'less')
setwd("D:/GITHUB/PS_pt/TH06/18120254")
load('heights.rda')
summary(heights)
hist(heights)
t.test(heights,mu = 160, conf.level=0.95)
#### cau 1
#alternative hypothesis: true mean is less: cho biet kiem dinh 2 phia hay 1 phia (less, greater, two side)
#99 percent confidence interval, alpha=0.01
#chi duoc ghi bac bo H0 hoac chua du co so bac bo H0 (khong dung vo H1)
data=read.csv('profit.csv')
attach(data)
summary(profit)
#a
hist(profit)
#b
result=t.test(profit,alternative="less",mu=65,conf.level=0.99)
result
#c
result=t.test(profit,alternative="two.sided",mu=60,conf.level=0.99)
result
mean_hypothesis_onesample=function(data, mu0, sigma, alpha,HA=c('two.side', 'greater', 'smaller')){
x=mean(data)
n=length(data)
s=sd(data)
# tính thống kê kiểm định
if(n >= 30){
if(sigma >= 0){                   # trường hợp 1: biết sigma
z0 = (x-mu0)/(sigma/sqrt(n))
}
else{                            # trường hợp 2: không biết sigma và mẫu lớn (n>=30)
z0 = (x-mu0)/(s/sqrt(n))
}
# tính p-value
if(HA == 'two.side'){
fiz0 = pnorm(abs(z0),0,1)
p.value = 2*(1-fiz0)
}else if(HA == 'greater'){
fiz0 = pnorm(z0,0,1)
p.value = 1 - fiz0
}else if(HA == 'smaller'){
fiz0 = pnorm(z0,0,1)
p.value = fiz0
}
}
else{                             # trường hợp 3: không biết sigma và mẫu nhỏ (n<30)
t0 = (x-mu0)/(s/sqrt(n))
# tính p-value
if(HA == 'two.side'){
p.value = 2*pt(abs(t0),n-1,lower.tail = FALSE)
}else if(HA == 'greater'){
p.value = pt(t0,n-1,lower.tail = FALSE)
}else if(HA == 'smaller'){
p.value = pt(t0,n-1)
}
}
# kết luận
if(p.value < alpha){
print ('Bac bo')
}
else{
print('Chua du co so bac bo')
}
print(x)
print(p.value)
}
result=mean_hypothesis_onesample(profit, 60, -1, 0.05,'two,sided')
setwd("D:/GITHUB/PS_pt/TH06/18120254")
load('heights.rda')
summary(heights)
hist(heights)
t.test(heights,mu = 160, conf.level=0.95)
#### cau 1
#alternative hypothesis: true mean is less: cho biet kiem dinh 2 phia hay 1 phia (less, greater, two side)
#99 percent confidence interval, alpha=0.01
#chi duoc ghi bac bo H0 hoac chua du co so bac bo H0 (khong dung vo H1)
data=read.csv('profit.csv')
attach(data)
summary(profit)
#a
hist(profit)
#b
result=t.test(profit,alternative="less",mu=65,conf.level=0.99)
result
#c
result=t.test(profit,alternative="two.sided",mu=60,conf.level=0.99)
result
mean_hypothesis_onesample=function(data, mu0, sigma, alpha,HA=c('two.side', 'greater', 'smaller')){
x=mean(data)
n=length(data)
s=sd(data)
# tính thống kê kiểm định
if(n >= 30){
if(sigma >= 0){                   # trường hợp 1: biết sigma
z0 = (x-mu0)/(sigma/sqrt(n))
}
else{                            # trường hợp 2: không biết sigma và mẫu lớn (n>=30)
z0 = (x-mu0)/(s/sqrt(n))
}
# tính p-value
if(HA == 'two.side'){
fiz0 = pnorm(abs(z0),0,1)
p.value = 2*(1-fiz0)
}else if(HA == 'greater'){
fiz0 = pnorm(z0,0,1)
p.value = 1 - fiz0
}else if(HA == 'smaller'){
fiz0 = pnorm(z0,0,1)
p.value = fiz0
}
}
else{                             # trường hợp 3: không biết sigma và mẫu nhỏ (n<30)
t0 = (x-mu0)/(s/sqrt(n))
# tính p-value
if(HA == 'two.side'){
p.value = 2*pt(abs(t0),n-1,lower.tail = FALSE)
}else if(HA == 'greater'){
p.value = pt(t0,n-1,lower.tail = FALSE)
}else if(HA == 'smaller'){
p.value = pt(t0,n-1)
}
}
# kết luận
if(p.value < alpha){
print ('Bac bo')
}
else{
print('Chua du co so bac bo')
}
print(x)
print(p.value)
}
result=mean_hypothesis_onesample(profit, 65, -1, 0.05,'two,sided')
setwd("D:/GITHUB/PS_pt/TH06/18120254")
load('heights.rda')
summary(heights)
hist(heights)
t.test(heights,mu = 160, conf.level=0.95)
#### cau 1
#alternative hypothesis: true mean is less: cho biet kiem dinh 2 phia hay 1 phia (less, greater, two side)
#99 percent confidence interval, alpha=0.01
#chi duoc ghi bac bo H0 hoac chua du co so bac bo H0 (khong dung vo H1)
data=read.csv('profit.csv')
attach(data)
summary(profit)
#a
hist(profit)
#b
result=t.test(profit,alternative="less",mu=65,conf.level=0.99)
result
#c
result=t.test(profit,alternative="two.sided",mu=60,conf.level=0.99)
result
mean_hypothesis_onesample=function(data, mu0, sigma, alpha,HA=c('two.side', 'greater', 'smaller')){
x=mean(data)
n=length(data)
s=sd(data)
# tính thống kê kiểm định
if(n >= 30){
if(sigma >= 0){                   # trường hợp 1: biết sigma
z0 = (x-mu0)/(sigma/sqrt(n))
}
else{                            # trường hợp 2: không biết sigma và mẫu lớn (n>=30)
z0 = (x-mu0)/(s/sqrt(n))
}
# tính p-value
if(HA == 'two.side'){
fiz0 = pnorm(abs(z0),0,1)
p.value = 2*(1-fiz0)
}else if(HA == 'greater'){
fiz0 = pnorm(z0,0,1)
p.value = 1 - fiz0
}else if(HA == 'smaller'){
fiz0 = pnorm(z0,0,1)
p.value = fiz0
}
}
else{                             # trường hợp 3: không biết sigma và mẫu nhỏ (n<30)
t0 = (x-mu0)/(s/sqrt(n))
# tính p-value
if(HA == 'two.side'){
p.value = 2*pt(abs(t0),n-1,lower.tail = FALSE)
}else if(HA == 'greater'){
p.value = pt(t0,n-1,lower.tail = FALSE)
}else if(HA == 'smaller'){
p.value = pt(t0,n-1)
}
}
# kết luận
if(p.value < alpha){
print ('Bac bo')
}
else{
print('Chua du co so bac bo')
}
print(x)
print(p.value)
}
result=mean_hypothesis_onesample(profit, 60, -1, 0.05,'two.sided')
setwd("D:/GITHUB/PS_pt/TH06/18120254")
load('heights.rda')
summary(heights)
hist(heights)
t.test(heights,mu = 160, conf.level=0.95)
#### cau 1
#alternative hypothesis: true mean is less: cho biet kiem dinh 2 phia hay 1 phia (less, greater, two side)
#99 percent confidence interval, alpha=0.01
#chi duoc ghi bac bo H0 hoac chua du co so bac bo H0 (khong dung vo H1)
data=read.csv('profit.csv')
attach(data)
summary(profit)
#a
hist(profit)
#b
result=t.test(profit,alternative="less",mu=65,conf.level=0.99)
result
#c
result=t.test(profit,alternative="two.sided",mu=60,conf.level=0.99)
result
mean_hypothesis_onesample=function(data, mu0, sigma, alpha,HA=c('two.side', 'greater', 'smaller')){
x=mean(data)
n=length(data)
s=sd(data)
# tính thống kê kiểm định
if(n >= 30){
if(sigma >= 0){                   # trường hợp 1: biết sigma
z0 = (x-mu0)/(sigma/sqrt(n))
}
else{                            # trường hợp 2: không biết sigma và mẫu lớn (n>=30)
z0 = (x-mu0)/(s/sqrt(n))
}
# tính p-value
if(HA == 'two.side'){
fiz0 = pnorm(abs(z0),0,1)
p.value = 2*(1-fiz0)
}else if(HA == 'greater'){
fiz0 = pnorm(z0,0,1)
p.value = 1 - fiz0
}else if(HA == 'smaller'){
fiz0 = pnorm(z0,0,1)
p.value = fiz0
}
}
else{                             # trường hợp 3: không biết sigma và mẫu nhỏ (n<30)
t0 = (x-mu0)/(s/sqrt(n))
# tính p-value
if(HA == 'two.side'){
p.value = 2*pt(abs(t0),n-1,lower.tail = FALSE)
}else if(HA == 'greater'){
p.value = pt(t0,n-1,lower.tail = FALSE)
}else if(HA == 'smaller'){
p.value = pt(t0,n-1)
}
}
# kết luận
if(p.value < alpha){
print ('Bac bo')
}
else{
print('Chua du co so bac bo')
}
print(x)
print(p.value)
}
result=mean_hypothesis_onesample(profit, 65, -1, 0.01,'less')
setwd("D:/GITHUB/PS_pt/TH06/18120254")
load('heights.rda')
summary(heights)
hist(heights)
t.test(heights,mu = 160, conf.level=0.95)
#### cau 1
#alternative hypothesis: true mean is less: cho biet kiem dinh 2 phia hay 1 phia (less, greater, two side)
#99 percent confidence interval, alpha=0.01
#chi duoc ghi bac bo H0 hoac chua du co so bac bo H0 (khong dung vo H1)
data=read.csv('profit.csv')
attach(data)
summary(profit)
#a
hist(profit)
#b
result=t.test(profit,alternative="less",mu=65,conf.level=0.99)
result
#c
result=t.test(profit,alternative="two.sided",mu=60,conf.level=0.99)
result
mean_hypothesis_onesample=function(data, mu0, sigma, alpha,HA=c('two.side', 'greater', 'smaller')){
x=mean(data)
n=length(data)
s=sd(data)
# tính thống kê kiểm định
if(n >= 30){
if(sigma >= 0){                   # trường hợp 1: biết sigma
z0 = (x-mu0)/(sigma/sqrt(n))
}
else{                            # trường hợp 2: không biết sigma và mẫu lớn (n>=30)
z0 = (x-mu0)/(s/sqrt(n))
}
# tính p-value
if(HA == 'two.side'){
fiz0 = pnorm(abs(z0),0,1)
p.value = 2*(1-fiz0)
}else if(HA == 'greater'){
fiz0 = pnorm(z0,0,1)
p.value = 1 - fiz0
}else if(HA == 'smaller'){
fiz0 = pnorm(z0,0,1)
p.value = fiz0
}
}
else{                             # trường hợp 3: không biết sigma và mẫu nhỏ (n<30)
t0 = (x-mu0)/(s/sqrt(n))
# tính p-value
if(HA == 'two.side'){
p.value = 2*pt(abs(t0),n-1,lower.tail = FALSE)
}else if(HA == 'greater'){
p.value = pt(t0,n-1,lower.tail = FALSE)
}else if(HA == 'smaller'){
p.value = pt(t0,n-1)
}
}
# kết luận
if(p.value < alpha){
print ('Bac bo')
}
else{
print('Chua du co so bac bo')
}
print(x)
print(p.value)
}
result=mean_hypothesis_onesample(profit, 65, -1, 0.01,'smaller')
setwd("D:/GITHUB/PS_pt/TH06/18120254")
load('heights.rda')
summary(heights)
hist(heights)
t.test(heights,mu = 160, conf.level=0.95)
#### cau 1
#alternative hypothesis: true mean is less: cho biet kiem dinh 2 phia hay 1 phia (less, greater, two side)
#99 percent confidence interval, alpha=0.01
#chi duoc ghi bac bo H0 hoac chua du co so bac bo H0 (khong dung vo H1)
data=read.csv('profit.csv')
attach(data)
summary(profit)
#a
hist(profit)
#b
result=t.test(profit,alternative="less",mu=65,conf.level=0.99)
result
#c
result=t.test(profit,alternative="two.sided",mu=60,conf.level=0.99)
result
mean_hypothesis_onesample=function(data, mu0, sigma, alpha,HA=c('two.side', 'greater', 'smaller')){
x=mean(data)
n=length(data)
s=sd(data)
# tính thống kê kiểm định
if(n >= 30){
if(sigma >= 0){                   # trường hợp 1: biết sigma
z0 = (x-mu0)/(sigma/sqrt(n))
}
else{                            # trường hợp 2: không biết sigma và mẫu lớn (n>=30)
z0 = (x-mu0)/(s/sqrt(n))
}
# tính p-value
if(HA == 'two.side'){
fiz0 = pnorm(abs(z0),0,1)
p.value = 2*(1-fiz0)
}else if(HA == 'greater'){
fiz0 = pnorm(z0,0,1)
p.value = 1 - fiz0
}else if(HA == 'smaller'){
fiz0 = pnorm(z0,0,1)
p.value = fiz0
}
}
else{                             # trường hợp 3: không biết sigma và mẫu nhỏ (n<30)
t0 = (x-mu0)/(s/sqrt(n))
# tính p-value
if(HA == 'two.side'){
p.value = 2*pt(abs(t0),n-1,lower.tail = FALSE)
}else if(HA == 'greater'){
p.value = pt(t0,n-1,lower.tail = FALSE)
}else if(HA == 'smaller'){
p.value = pt(t0,n-1)
}
}
# kết luận
if(p.value < alpha){
print ('Bac bo')
}
else{
print('Chua du co so bac bo')
}
print(x)
print(p.value)
}
result=mean_hypothesis_onesample(profit, 60, -1, 0.01,'two.side')
a=pnorm(0.03,0,1)
a
pnorm(0.03)
mean_hypothesis_twosample=function(data1, data2, mu0, sigma1, sigma2, alpha, HA=c('two.side','greater','smaller')){
x=mean(data1)
n=length(data1)
sx=sd(data1)
y=mean(data)
m=length(data)
sy=sd(data)
if(n >= 30){
if(sigma >= 0){  # th 1; biet sigma
z0 = ((x-y-mu0)/(sqrt(sigma1^2/n+sigma2^2/m))
}
else{              #th 2: ko biet sigma, mau lon
z0 = ((x-y-mu0)/(sqrt(sx^2/n+sy^2/m))
}
}
else{              #th3: ko biet sigma, mau nho
}
if(sigma1^2 == sigam2^2){  #th phuong sai bang nhau
}
else{
}
}
mean_hypothesis_twosample=function(data1, data2, mu0, sigma1, sigma2, alpha, HA=c('two.side','greater','smaller')){
x=mean(data1)
n=length(data1)
sx=sd(data1)
y=mean(data2)
m=length(data2)
sy=sd(data2)
if(n >= 30){
if(sigma >= 0){  # th 1; biet sigma
z0 = ((x-y-mu0)/(sqrt(sigma1^2/n+sigma2^2/m))
}
else{              #th 2: ko biet sigma, mau lon
z0 = ((x-y-mu0)/(sqrt(sx^2/n+sy^2/m))
}
}
else{              #th3: ko biet sigma, mau nho
}
if(sigma1^2 == sigam2^2){  #th phuong sai bang nhau
}
else{
}
}
mean_hypothesis_twosample=function(data1, data2, mu0, sigma1, sigma2, alpha, HA=c('two.side','greater','smaller')){
x=mean(data1)
n=length(data1)
sx=sd(data1)
y=mean(data2)
m=length(data2)
sy=sd(data2)
if(n >= 30){
if(sigma1 >= 0){  # th 1; biet sigma
z0 = ((x-y)/(sqrt(sigma1^2/n+sigma2^2/m))
}
else{              #th 2: ko biet sigma, mau lon
z0 = ((x-y)/(sqrt(sx^2/n+sy^2/m))
}
}
else{              #th3: ko biet sigma, mau nho
}
if(sigma1^2 == sigam2^2){  #th phuong sai bang nhau
}
else{
}
}
